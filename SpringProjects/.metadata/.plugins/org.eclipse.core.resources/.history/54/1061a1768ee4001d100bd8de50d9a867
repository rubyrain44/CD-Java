package com.johnp.musicfest.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.johnp.musicfest.models.Lineup;
import com.johnp.musicfest.repositories.LineupRepository;
import com.lorrained.thoughts_confessions.models.Confession;
import com.lorrained.thoughts_confessions.models.Thought;

@Service
public class LineupService {
    @Autowired
    private LineupRepository LineupRepo;

	public Lineup findById(Long id) {
		
		Optional<Lineup> result = LineupRepo.findById(id);
		if(result.isPresent()) {
			return result.get();
		}
		
		return null;
	}
	
    ///RETRIEVE ALL USERS THOUGHTS
    public List<Lineup> allUsersLineups(Long id) {
        return LineupRepo.findUserThoughtsById(id);
    }
	

	public List<Lineup> all() {
		return LineupRepo.findAll();
	}
	
	public Lineup create(Lineup lineup) {
		return LineupRepo.save(lineup);
	}
	
    public Lineup findLineup(Long id) {
        Optional<Lineup> optionalLineup = LineupRepo.findById(id);
        if(optionalLineup.isPresent()) {
            return optionalLineup.get();
        } else {
            return null;
        }
    }
	

	public void delete (Long id) {
		LineupRepo.deleteById(id);
	
	}
	
	public Lineup update(Lineup lineup) {
		return LineupRepo.save(lineup);
	}

}
